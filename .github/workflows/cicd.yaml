name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Image Tag
        id: prepare-tag
        run: |
          # 타임스탬프 사용 (혹은 short SHA 등 사용 가능)
          echo "TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        id: build_and_push
        uses: docker/build-push-action@v4
        with:
          context: ./docker-test
          push: true
          tags: |
            ykim73094/aks-test:latest
            ykim73094/aks-test:${{ env.TAG }}

      - name: Set Output Image
        id: set-image
        run: |
          IMAGE="ykim73094/aks-test:${{ env.TAG }}"
          echo "✅ Setting output image: $IMAGE"
          # Job output & GITHUB_ENV에 모두 기록
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

  update-manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout argocd-example-apps
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: ykim73094/argocd-example-apps
          token: ${{ secrets.GH_PAT }}
      
      - name: Pull latest code
        run: |
          git checkout master
          git pull origin master

      - name: Ensure image field exists & Update Deployment YAML
        run: |
          IMAGE="${{ needs.build.outputs.image }}"
          if [ -z "$IMAGE" ]; then
            echo "⚠️ ERROR: Docker image is empty! Exiting..."
            exit 1
          fi
          
          # guestbook-ui-deployment.yaml 안에 'image:' 라인이 없다면 임시 추가
          if ! grep -q "image:" guestbook/guestbook-ui-deployment.yaml; then
            echo "image: ykim73094/aks-test:latest" >> guestbook/guestbook-ui-deployment.yaml
          fi
          
          # 존재하는 'image:' 라인을 빌드된 이미지로 치환
          sed -i "s|image: .*|image: $IMAGE|" guestbook/guestbook-ui-deployment.yaml

          echo "🔍 Updated guestbook-ui-deployment.yaml:"
          cat guestbook/guestbook-ui-deployment.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          git add guestbook/guestbook-ui-deployment.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update deployment image to ${{ needs.build.outputs.image }}"
            git push origin master
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: update-manifest
    steps:
      - name: Checkout this repo (optional)
        uses: actions/checkout@v3

      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 \
            https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: Test Argo CD Connection
        run: |
          curl -k -I https://${{ secrets.ARGOCD_SERVER }} || echo "ArgoCD server is not reachable"

      - name: Login to Argo CD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure \
            --grpc-web

      - name: Force Refresh Argo CD App
        run: |
          # argocd app refresh <APP_NAME>가 deprecated되었으므로
          # argocd app get <APP_NAME> --refresh normal 사용
          argocd app get guestbook --refresh normal --grpc-web --insecure

      - name: Trigger Argo CD Sync
        run: |
          argocd app sync guestbook --grpc-web --insecure
          argocd app wait guestbook --health --operation --timeout 300
