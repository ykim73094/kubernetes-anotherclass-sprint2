name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # ✅ main 브랜치에 푸시될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ✅ Docker 이미지 빌드 & 푸시
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ykim73094/test  # 🔥 Docker Hub에 올릴 이미지
          TAG=$(date +%s)  # 🔥 현재 시간 기반 태그
          docker build -t $IMAGE_NAME:$TAG ./docker-test
          docker push $IMAGE_NAME:$TAG
          echo "IMAGE=$IMAGE_NAME:$TAG" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build  # ✅ Docker Push가 끝난 후 실행됨
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ Kubernetes 연결 (Kubeconfig 설정)
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # ✅ Kubernetes 매니페스트 업데이트
      - name: Update Kubernetes Manifests
        run: |
          sed -i "s|image:.*|image: ${{ env.IMAGE }}|" k8s/deployment.yaml
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add k8s/deployment.yaml
          git commit -m "Update deployment image"
          git push

      # ✅ Kubernetes 배포 적용
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/my-app -n default
